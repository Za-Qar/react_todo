[{"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\reportWebVitals.js":"1","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\App.js":"2","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\header\\index.js":"3","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\nav\\index.js":"4","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\weather\\index.js":"5","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\timeDate\\index.js":"6","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\todo\\index.js":"7","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\counter\\index.js":"8","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\notes\\index.js":"9","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\note\\index.js":"10","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\nasaPic\\index.js":"11","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\config\\index.js":"12","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\logout\\index.js":"13","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\login\\index.js":"14","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\todos\\index.js":"15","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\counters\\index.js":"16","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\configs\\configs.js":"17","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\index.js":"18"},{"size":375,"mtime":1607906684543,"results":"19","hashOfConfig":"20"},{"size":5683,"mtime":1611745778131,"results":"21","hashOfConfig":"20"},{"size":136,"mtime":1607906684532,"results":"22","hashOfConfig":"20"},{"size":1415,"mtime":1608404386260,"results":"23","hashOfConfig":"20"},{"size":4839,"mtime":1611767211822,"results":"24","hashOfConfig":"20"},{"size":1830,"mtime":1608471171459,"results":"25","hashOfConfig":"20"},{"size":1519,"mtime":1611362838360,"results":"26","hashOfConfig":"20"},{"size":2379,"mtime":1609192228720,"results":"27","hashOfConfig":"20"},{"size":7673,"mtime":1611765957967,"results":"28","hashOfConfig":"20"},{"size":1163,"mtime":1611763386313,"results":"29","hashOfConfig":"20"},{"size":2205,"mtime":1608381710330,"results":"30","hashOfConfig":"20"},{"size":373,"mtime":1611769985382,"results":"31","hashOfConfig":"20"},{"size":819,"mtime":1608392409046,"results":"32","hashOfConfig":"20"},{"size":1724,"mtime":1608405163639,"results":"33","hashOfConfig":"20"},{"size":8379,"mtime":1611745708699,"results":"34","hashOfConfig":"20"},{"size":8848,"mtime":1611763386305,"results":"35","hashOfConfig":"20"},{"size":278,"mtime":1611768019614,"results":"36","hashOfConfig":"20"},{"size":517,"mtime":1607906684541,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"kj65l",{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\reportWebVitals.js",[],["86","87"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\App.js",["88","89","90","91","92"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\header\\index.js",["93"],"import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <img />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",["94","95"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\nav\\index.js",[],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\weather\\index.js",["96","97","98","99","100","101"],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport \"./weather.css\";\r\n\r\nconst initialState = \"\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"temp\":\r\n      return \"??\";\r\n  }\r\n}\r\n\r\nfunction Weather() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [tempMax, setTempMax] = useState(\"\");\r\n  const [tempMin, setTempMin] = useState(\"\");\r\n  const [feel, setFeel] = useState(\"\");\r\n  const [curr, setCurr] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [wethImage, setWethImage] = useState(\"\");\r\n  // GET WEATHER FROM API PROVIDER\r\n  useEffect(() => {\r\n    const apiKey = process.env.WEATHER_API;\r\n    async function getWeather(latitude, longitude) {\r\n      let api = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}`\r\n      );\r\n      //   console.log(api);\r\n      let data = await api.json();\r\n      let results = data.main;\r\n      // console.log(results)\r\n      let currentSituation = data?.weather[0].description;\r\n      let { temp, feels_like, temp_min, temp_max, pressure } = results;\r\n      let city = data.name;\r\n\r\n      temp = Math.floor(results.temp - 273.15);\r\n      feels_like = Math.floor(results.feels_like - 273.15);\r\n      temp_min = Math.floor(results.temp_min - 273.15);\r\n      temp_max = Math.floor(results.temp_max - 273.15);\r\n\r\n      setTemp(temp);\r\n      setTempMax(temp_max);\r\n      setTempMin(temp_min);\r\n      setFeel(feels_like);\r\n      setCurr(currentSituation);\r\n      setCity(city);\r\n\r\n      console.log(temp);\r\n      console.log(feels_like);\r\n      console.log(currentSituation);\r\n      console.log(city);\r\n\r\n      // /b /b => regex\r\n      if (currentSituation === \"fog\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/2076/2076792.svg\"\r\n        );\r\n      } else if (currentSituation === \"clear sky\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/2698/2698194.svg\"\r\n        );\r\n      } else if (currentSituation === \"few clouds\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/1146/1146869.svg\"\r\n        );\r\n      } else if (currentSituation === \"scattered clouds\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/2151/2151266.svg\"\r\n        );\r\n      } else if (currentSituation === \"broken clouds\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/616/616682.svg\"\r\n        );\r\n      } else if (currentSituation === \"shower rain\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/premium-icon/icons/svg/1959/1959338.svg\"\r\n        );\r\n      } else if (currentSituation === \"rain\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/616/616450.svg\"\r\n        );\r\n      } else if (currentSituation === \"thunderstorm\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/1779/1779963.svg\"\r\n        );\r\n      } else if (currentSituation === \"snow\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/2942/2942909.svg\"\r\n        );\r\n      } else if (currentSituation === \"mist\") {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/990/990469.svg\"\r\n        );\r\n      } else if (\r\n        currentSituation === \"moderate rain\" ||\r\n        currentSituation === \"light rain\"\r\n      ) {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/2948/2948217.svg\"\r\n        );\r\n      } else {\r\n        setWethImage(\r\n          \"https://www.flaticon.com/svg/static/icons/svg/616/616450.svg\"\r\n        );\r\n      }\r\n    }\r\n\r\n    getWeather(52.4862, -1.8904);\r\n    setInterval(getWeather(52.4862, -1.8904), 30000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"sideBox weatherSec\">\r\n        <p className=\"city\">{city}</p>\r\n        <p className=\"temp\">{temp}°C</p>\r\n\r\n        <img alt=\"current weather\" className=\"curWeathImage\" src={wethImage} />\r\n        <p className=\"curr\">{curr}</p>\r\n\r\n        <div className=\"temp\">\r\n          <img\r\n            src=\"https://www.flaticon.com/svg/static/icons/svg/2041/2041670.svg\"\r\n            width=\"30px\"\r\n          />\r\n          <span className=\"spanWeather\"></span>\r\n          <p> Max: {tempMax}°C</p>\r\n        </div>\r\n\r\n        <div className=\"temp\">\r\n          <img\r\n            src=\"https://www.flaticon.com/svg/static/icons/svg/3593/3593622.svg\"\r\n            width=\"30px\"\r\n          />\r\n          <span className=\"spanWeather\"></span>\r\n          <p> Min: {tempMin}°C</p>\r\n        </div>\r\n\r\n        <p className=\"feel\">Feels like {feel}°C</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\timeDate\\index.js",[],["102","103"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\todo\\index.js",["104","105","106"],"import React, { useState } from \"react\";\r\nimport \"./todo.css\";\r\n\r\nfunction Todo({\r\n  todoItem,\r\n  deleteTodo,\r\n  todoId,\r\n  index,\r\n  todoClass,\r\n  colour,\r\n  strikeTodo,\r\n  currentStatus,\r\n}) {\r\n  const [complete, setComplete] = useState(`${currentStatus}`);\r\n  const [opacity, setOpacity] = useState(\"\");\r\n  const [opacityGarbage, setOpacityGarbage] = useState(\"\");\r\n\r\n  function strikeThrough() {\r\n    console.log(complete);\r\n    complete != \"complete\" ? setComplete(\"complete\") : setComplete(\"active\");\r\n    complete != \"complete\" ? setOpacity(\"opacity\") : setOpacity(\"\");\r\n    complete != \"complete\"\r\n      ? setOpacityGarbage(\"opacityGarbage\")\r\n      : setOpacityGarbage(\"\");\r\n    // if (!complete) {\r\n    //   setComplete(\"complete\");\r\n    // } else {\r\n    //   setComplete(\"active\");\r\n    // }\r\n    console.log(todoId, complete);\r\n    strikeTodo(todoId, complete);\r\n  }\r\n\r\n  return (\r\n    <div className={`todo ${colour} ${opacity} ` /*${todoClass}*/}>\r\n      {\" \"}\r\n      <div className=\"container\">\r\n        <div className=\"todoDiv\">\r\n          <div className=\"todoInnerText\">\r\n            <p className={`todoText ${complete}`} onClick={strikeThrough}>\r\n              {todoItem}\r\n            </p>\r\n          </div>\r\n          <img\r\n            className={`todoDelete ${opacityGarbage}`}\r\n            onClick={() => deleteTodo(index, todoId)}\r\n            src=\"https://i.imgur.com/z4KpjzC.png\"\r\n            alt=\"delete\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\counter\\index.js",["107"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\notes\\index.js",["108","109","110"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./notes.css\";\r\nimport { BACKEND_URLS } from \"../../configs/configs\";\r\n\r\nimport Note from \"../note\";\r\n\r\n// Encryption\r\nimport CryptoJS from \"react-native-crypto-js\";\r\n\r\nfunction Notes() {\r\n  const area = useRef(null);\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [note, setNote] = useState([]);\r\n\r\n  const [retrieveAllNote, setRetrieveAllNotes] = useState([]);\r\n\r\n  const [getNewNoteId, setNewNoteId] = useState(0);\r\n\r\n  const [colour, setColour] = useState(\"whiteNote\");\r\n\r\n  const [hide, setHide] = useState(\"\");\r\n\r\n  /*---------------Add Note----------------*/\r\n  let postNote = (title, text, colour) => {\r\n    // Encrypt\r\n    const encryptedTitle = CryptoJS.AES.encrypt(\r\n      `${title}`,\r\n      `${process.env.ENCRYPTION_HASH}`\r\n    ).toString();\r\n\r\n    // Encrypt\r\n    const encryptedText = CryptoJS.AES.encrypt(\r\n      `${text}`,\r\n      `${process.env.ENCRYPTION_HASH}`\r\n    ).toString();\r\n\r\n    // Encrypt\r\n    const encryptedColour = CryptoJS.AES.encrypt(\r\n      `${colour}`,\r\n      `${process.env.ENCRYPTION_HASH}`\r\n    ).toString();\r\n\r\n    fetch(`${BACKEND_URLS.NOTES}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title: encryptedTitle,\r\n        text: encryptedText,\r\n        colour: encryptedColour,\r\n      }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setNewNoteId(data[0].id))\r\n      .catch((error) => console.log(\"Notes error: \", error));\r\n  };\r\n\r\n  /*---------------Retrieve all notes----------------*/\r\n  async function retrieveAllNotes() {\r\n    let res = await fetch(`${BACKEND_URLS.NOTES}`);\r\n    let data = await res.json();\r\n\r\n    const decrypting = data.payload.map((item) => {\r\n      // Decrypt\r\n      const decryptingColour = CryptoJS.AES.decrypt(\r\n        `${item.color}`,\r\n        `${process.env.ENCRYPTION_HASH}`\r\n      );\r\n      const decryptedColour = decryptingColour.toString(CryptoJS.enc.Utf8);\r\n\r\n      // Decrypt\r\n      const decryptingText = CryptoJS.AES.decrypt(\r\n        `${item.text}`,\r\n        `${process.env.ENCRYPTION_HASH}`\r\n      );\r\n      const decryptedText = decryptingText.toString(CryptoJS.enc.Utf8);\r\n\r\n      // Decrypt\r\n      const decryptingTitle = CryptoJS.AES.decrypt(\r\n        `${item.title}`,\r\n        `${process.env.ENCRYPTION_HASH}`\r\n      );\r\n      const decryptedTitle = decryptingTitle.toString(CryptoJS.enc.Utf8);\r\n\r\n      return {\r\n        color: decryptedColour,\r\n        id: item.id,\r\n        text: decryptedText,\r\n        title: decryptedTitle,\r\n        status: item.status,\r\n      };\r\n    });\r\n\r\n    console.log(\"these are all the notes on the database: \", data.payload);\r\n    setRetrieveAllNotes(decrypting);\r\n  }\r\n\r\n  useEffect(() => {\r\n    retrieveAllNotes();\r\n  }, []);\r\n\r\n  /*---------------Delete note----------------*/\r\n  let deleteNoteBackend = (id) => {\r\n    fetch(`${BACKEND_URLS.NOTES}/${id}`, {\r\n      method: \"delete\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data, \"Note has been delete buddy boy\"))\r\n      .catch((error) => console.log(error, \"this is the delete note error\"));\r\n  };\r\n\r\n  /*--------------------Notes backend end----------------------*/\r\n\r\n  async function addNote() {\r\n    setRetrieveAllNotes([\r\n      ...retrieveAllNote,\r\n      { title: titleInput, text: textInput, colour: colour, id: getNewNoteId },\r\n    ]);\r\n    postNote(titleInput, textInput, colour);\r\n  }\r\n  console.log(\"retrieveAllNote: \", retrieveAllNote);\r\n\r\n  function deleteNote(id, noteId) {\r\n    confirmAlert({\r\n      title: \"Are you sure you want to delete this notes?\",\r\n      message: \"This action is irreversible\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            // let newNotes = [\r\n            //   ...retrieveAllNote.slice(0, id),\r\n            //   ...retrieveAllNote.slice(id + 1),\r\n            // ];\r\n            setRetrieveAllNotes(\r\n              retrieveAllNote.filter((note) => note.id !== noteId)\r\n            );\r\n\r\n            deleteNoteBackend(noteId);\r\n            // retrieveAllNotes();\r\n            // setHide(\"hide\");\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return;\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"notesSec\">\r\n        <div className=\"notesInput\">\r\n          <input\r\n            placeholder=\"Title\"\r\n            className=\"inputFieldNotesLeft\"\r\n            onChange={(e) => setTitleInput(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Text\"\r\n            className=\"inputFieldNotesRight\"\r\n            onChange={(e) => setTextInput(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"addNoteButton\" onClick={addNote}>\r\n          Add Note\r\n        </button>\r\n        <div class=\"colour\">\r\n          <h4>Choose a colour</h4>\r\n          <span class=\"column in1\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"whiteNote\")}\r\n            />\r\n          </span>\r\n          <span class=\"column in2\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"greenNote\")}\r\n            />\r\n          </span>\r\n          <span class=\"column in3\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"redNote\")}\r\n            />\r\n          </span>\r\n          <span class=\"column in4\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"purpleNote\")}\r\n            />\r\n          </span>\r\n          <span class=\"column in5\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"peachNote\")}\r\n            />\r\n          </span>\r\n\r\n          <span class=\"column in6\">\r\n            <input\r\n              class=\"allColumns\"\r\n              name=\"colour\"\r\n              type=\"radio\"\r\n              onChange={() => setColour(\"blueNote\")}\r\n            />\r\n          </span>\r\n        </div>\r\n        <motion.div className=\"drag-area\" ref={area}>\r\n          {retrieveAllNote.map((item, index) => {\r\n            return (\r\n              <Note\r\n                area={area}\r\n                noteTitle={item.title}\r\n                noteText={item.text}\r\n                index={index}\r\n                deleteNote={deleteNote}\r\n                noteId={getNewNoteId ? getNewNoteId : item.id}\r\n                key={index}\r\n                colour={item.color}\r\n                hide={hide}\r\n              />\r\n            );\r\n          })}\r\n          {/*noteText={noteText}*/}\r\n          {/* {note.map((item, index) => {\r\n            return (\r\n              <Note\r\n                area={area}\r\n                noteTitle={item.title}\r\n                noteText={item.text}\r\n                index={index}\r\n                deleteNote={deleteNote}\r\n                noteId={getNewNoteId}\r\n                key={index}\r\n                colour={item.colour}\r\n                hide={hide}\r\n              />\r\n            );\r\n          })} */}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n",["111","112"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\note\\index.js",["113","114"],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\nasaPic\\index.js",["115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./nasaPic.css\";\r\n\r\nfunction NasaPic() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [copyright, setCopyright] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  const [hdurl, setHdurl] = useState(\"\");\r\n\r\n  const [flexHide, setFlexHide] = useState(\"flexHide\");\r\n\r\n  async function nasaImageApi() {\r\n    let result = await fetch(\r\n      `https://api.nasa.gov/planetary/apod?api_key=5hGXtiNISMXZjSMf7hvUqv1v67bFuqlJKoYVn6PX`\r\n    );\r\n    let data = await result.json();\r\n\r\n    setUrl(data.url);\r\n    console.log(data.url);\r\n\r\n    setCopyright(data.copyright);\r\n    setDate(data.date);\r\n    setExplanation(data.explanation);\r\n    setHdurl(data.hdurl);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInterval(nasaImageApi(), 8.64e7); //8.64e7\r\n    // return () => clearInterval(imageInterval);\r\n  }, []);\r\n\r\n  function hideExpandedImage() {\r\n    setFlexHide(\"flexHide\");\r\n  }\r\n\r\n  function expandedImage() {\r\n    // setFlexHide(\"\");\r\n    flexHide ? setFlexHide(\"\") : setFlexHide(\"flexHide\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"sideBox nasaPicSec\">\r\n          <p>Nasa Image of the day</p>\r\n          <div className=\"nasaImageSmallContainer\">\r\n            <img\r\n              src={url}\r\n              alt=\"Nasa picture of the day\"\r\n              className=\"nasaImgSmall\"\r\n              onClick={expandedImage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`alignerNasa ${flexHide}`} onClick={hideExpandedImage}>\r\n        <div className=\"nasaExplanation\">\r\n          <p>{date}</p>\r\n        </div>\r\n\r\n        <div className=\"nasaExplanation\">\r\n          <p>{copyright}</p>\r\n        </div>\r\n\r\n        <div className=\"aligneeNasa\">\r\n          <div className=\"nasaImageClose\">\r\n            <p onClick={hideExpandedImage}>x</p>\r\n          </div>\r\n\r\n          <img src={hdurl} alt=\"Nasa image of the day\" className=\"nasaImgBig\" />\r\n        </div>\r\n\r\n        <div className=\"nasaExplanation\">\r\n          <p>{explanation}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NasaPic;\r\n","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\config\\index.js",[],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\logout\\index.js",["117","118","119"],"import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd,\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\n\r\nimport \"./logout.css\";\r\n\r\nfunction Logout() {\r\n  return (\r\n    <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <IfFirebaseAuthed>\r\n        {() => {\r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                firebase.auth().signOut();\r\n              }}\r\n              className=\"logoutButton\"\r\n            >\r\n              Logout\r\n            </button>\r\n          );\r\n        }}\r\n      </IfFirebaseAuthed>\r\n    </FirebaseAuthProvider>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\login\\index.js",["120","121","122"],"import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  FirebaseAuthProvider,\r\n  FirebaseAuthConsumer,\r\n  IfFirebaseAuthed,\r\n  IfFirebaseAuthedAnd,\r\n} from \"@react-firebase/auth\";\r\nimport { config } from \"../config\";\r\n\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <FirebaseAuthProvider {...config} firebase={firebase}>\r\n      <FirebaseAuthConsumer>\r\n        {({ isSignedIn }) => {\r\n          if (isSignedIn === true) {\r\n            return;\r\n          } else {\r\n            return (\r\n              <button\r\n                onClick={() => {\r\n                  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                  firebase.auth().signInWithPopup(googleAuthProvider);\r\n                }}\r\n                className=\"loginButton\"\r\n              >\r\n                Login with Google\r\n              </button>\r\n            );\r\n          }\r\n        }}\r\n      </FirebaseAuthConsumer>\r\n    </FirebaseAuthProvider>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n// firebase.auth().signInWithPopup(provider).then(function(result) {\r\n//     // This gives you a Google Access Token. You can use it to access the Google API.\r\n//     var token = result.credential.accessToken;\r\n//     // The signed-in user info.\r\n//     var user = result.user;\r\n//     // ...\r\n//   }).catch(function(error) {\r\n//     // Handle Errors here.\r\n//     var errorCode = error.code;\r\n//     var errorMessage = error.message;\r\n//     // The email of the user's account used.\r\n//     var email = error.email;\r\n//     // The firebase.auth.AuthCredential type that was used.\r\n//     var credential = error.credential;\r\n//     // ...\r\n//   });\r\n","C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\todos\\index.js",[],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\components\\counters\\index.js",[],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\configs\\configs.js",[],"C:\\Users\\herzallr\\Desktop\\Me\\School of code\\Notes and code\\Practice\\todo_react\\todo_react\\src\\index.js",[],["123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":8,"column":3,"nodeType":"131","messageId":"132","endLine":8,"endColumn":19},{"ruleId":"129","severity":1,"message":"134","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":12},{"ruleId":"129","severity":1,"message":"135","line":19,"column":8,"nodeType":"131","messageId":"132","endLine":19,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":80,"column":27,"nodeType":"138","endLine":84,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":6,"column":7,"nodeType":"138","endLine":6,"endColumn":14},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":10,"endColumn":4},{"ruleId":"129","severity":1,"message":"147","line":14,"column":10,"nodeType":"131","messageId":"132","endLine":14,"endColumn":15},{"ruleId":"129","severity":1,"message":"148","line":14,"column":17,"nodeType":"131","messageId":"132","endLine":14,"endColumn":25},{"ruleId":"129","severity":1,"message":"149","line":35,"column":51,"nodeType":"131","messageId":"132","endLine":35,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":124,"column":11,"nodeType":"138","endLine":127,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":133,"column":11,"nodeType":"138","endLine":136,"endColumn":13},{"ruleId":"125","replacedBy":"150"},{"ruleId":"127","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":20,"column":14,"nodeType":"154","messageId":"155","endLine":20,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":21,"column":14,"nodeType":"154","messageId":"155","endLine":21,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":22,"column":14,"nodeType":"154","messageId":"155","endLine":22,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":25,"column":6,"nodeType":"158","endLine":25,"endColumn":8,"suggestions":"159"},{"ruleId":"129","severity":1,"message":"160","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":14},{"ruleId":"129","severity":1,"message":"161","line":16,"column":16,"nodeType":"131","messageId":"132","endLine":16,"endColumn":23},{"ruleId":"129","severity":1,"message":"162","line":24,"column":16,"nodeType":"131","messageId":"132","endLine":24,"endColumn":23},{"ruleId":"125","replacedBy":"163"},{"ruleId":"127","replacedBy":"164"},{"ruleId":"129","severity":1,"message":"165","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"166","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":48,"column":13,"nodeType":"138","endLine":53,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":72,"column":11,"nodeType":"138","endLine":72,"endColumn":81},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"167","line":7,"column":3,"nodeType":"131","messageId":"132","endLine":7,"endColumn":23},{"ruleId":"129","severity":1,"message":"168","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":9,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":8,"column":3,"nodeType":"131","messageId":"132","endLine":8,"endColumn":19},{"ruleId":"129","severity":1,"message":"168","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":9,"endColumn":22},{"ruleId":"125","replacedBy":"169"},{"ruleId":"127","replacedBy":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'IfFirebaseAuthed' is defined but never used.","'logo' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["171"],["172"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'pressure' is assigned a value but never used.",["171"],["172"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDbCounterValueToLocal'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'setHide' is assigned a value but never used.",["171"],["172"],"'useState' is defined but never used.","'useRef' is defined but never used.","'FirebaseAuthConsumer' is defined but never used.","'IfFirebaseAuthedAnd' is defined but never used.",["171"],["172"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [setDbCounterValueToLocal]",{"range":"176","text":"177"},[615,617],"[setDbCounterValueToLocal]"]